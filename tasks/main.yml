---
- name: get Galaxy version from releases
  shell: ls {{ galaxy_server_dir }}/doc/source/releases | grep '[1-2][1-9]\.[0-1][0-9]\.rst' | sort -n -r | head -n 1 | cut -d'.' -f1,2
  register: galaxy_installed_version
  tags:
    - get_galaxy_version

- name: validate version check
  set_fact:
    checked_galaxy_version: ""
  tags: 
    - get_galaxy_version

- name: validate version check pt. 2
  set_fact:
    checked_galaxy_version: "{{ galaxy_installed_version.stdout }}"
  tags: 
    - get_galaxy_version
  when: 
    - galaxy_installed_version.stdout is regex("[1-2][0-9]\.[0-1][0-9]")
    - galaxy_installed_version.stderr == ""

- name: Check ansible version
  fail:
    msg: "Installed ansible version {{ ansible_version.full }}, but ansible version > 2.1.1.1 required"
  when: ansible_version.full is version_compare('2.1.1.1', '<')

- include_tasks: "bootstrap_user.yml"
  vars:
    create_user: "{{ galaxy_tools_create_bootstrap_user }}"
  when: galaxy_tools_create_bootstrap_user and (not galaxy_tools_api_key or galaxy_tools_admin_user_preset_api_key)

- include_tasks: tools.yml
  when: galaxy_tools_install_tools

- include_tasks: data_managers.yml
  when: galaxy_tools_install_data_managers

- include_tasks: workflows.yml
  when: galaxy_tools_install_workflows

- include_tasks: "bootstrap_user.yml"
  vars:
    delete_user: "{{ galaxy_tools_delete_bootstrap_user }}"
  when: galaxy_tools_delete_bootstrap_user
